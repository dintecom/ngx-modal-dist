!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/router"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-modal",["exports","@angular/core","@angular/router","@angular/common"],e):e((t=t||self)["ngx-modal"]={},t.ng.core,t.ng.router,t.ng.common)}(this,function(t,e,n,o){"use strict";var a=function(){function t(){}return t.decorators=[{type:e.Component,args:[{selector:"modal-header",template:"\n    <ng-content></ng-content>\n  "}]}],t}(),s=function(){function t(){}return t.decorators=[{type:e.Component,args:[{selector:"modal-content",template:"\n    <ng-content></ng-content>\n  "}]}],t}(),l=function(){function t(){}return t.decorators=[{type:e.Component,args:[{selector:"modal-footer",template:"\n    <ng-content></ng-content>\n  "}]}],t}(),d=function(){function t(){this.closeOnEscape=!0,this.closeOnOutsideClick=!0,this.hideCloseButton=!1,this.onOpen=new e.EventEmitter(!1),this.onClose=new e.EventEmitter(!1),this.onSubmit=new e.EventEmitter(!1),this.isOpened=!1,this.createBackDrop()}return t.prototype.ngOnDestroy=function(){document.body.className=document.body.className.replace(/modal-open\b/,""),this.backdropElement&&this.backdropElement.parentNode===document.body&&document.body.removeChild(this.backdropElement)},t.prototype.open=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];this.isOpened||(this.isOpened=!0,this.onOpen.emit(e),this.backdropElement&&document.body.appendChild(this.backdropElement),window.setTimeout(function(){return t.modalRoot.nativeElement.focus()},0),document.body.className+=" modal-open")},t.prototype.close=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.isOpened&&(this.isOpened=!1,this.onClose.emit(t),this.backdropElement&&document.body.removeChild(this.backdropElement),document.body.className=document.body.className.replace(/modal-open\b/,""))},t.prototype.checkClose=function(t){!0===this.closeOnOutsideClick&&this.modalRoot.nativeElement===t.target&&this.close()},t.prototype.createBackDrop=function(){document.getElementById("modal-backdrop")||(this.backdropElement=document.createElement("div"),this.backdropElement.setAttribute("id","modal-backdrop"),this.backdropElement.classList.add("modal-backdrop"),this.backdropElement.classList.add("fade"),this.backdropElement.classList.add("in"),this.backdropElement.classList.add("show"))},t.decorators=[{type:e.Component,args:[{selector:"modal",template:'\n    <div\n      class="modal"\n      tabindex="-1"\n      role="dialog"\n      #modalRoot\n      (keydown.esc)="closeOnEscape ? close() : 0"\n      [ngClass]="{ in: isOpened, fade: isOpened, show: isOpened }"\n      [ngStyle]="{ display: isOpened ? \'block\' : \'none\' }"\n      (mousedown)="checkClose($event)"\n    >\n      <div class="modal-dialog" [ngClass]="modalClass" #modalContent>\n        <div class="modal-content" tabindex="0" *ngIf="isOpened">\n          <div class="modal-header">\n            <h4 class="modal-title" *ngIf="title">{{ title }}</h4>\n            <ng-content select="modal-header"></ng-content>\n            <button\n              *ngIf="!hideCloseButton"\n              type="button"\n              class="close"\n              data-dismiss="modal"\n              [attr.aria-label]="cancelButtonLabel || \'Close\'"\n              (click)="close()"\n            >\n              <span aria-hidden="true">&times;</span>\n            </button>\n          </div>\n          <div class="modal-body">\n            <ng-content select="modal-content"></ng-content>\n          </div>\n          <div class="modal-footer">\n            <ng-content select="modal-footer"></ng-content>\n            <button\n              *ngIf="cancelButtonLabel"\n              type="button"\n              class="btn btn-default"\n              data-dismiss="modal"\n              (click)="close()"\n            >\n              {{ cancelButtonLabel }}\n            </button>\n            <button\n              *ngIf="submitButtonLabel"\n              type="button"\n              class="btn btn-primary"\n              (click)="onSubmit.emit(undefined)"\n            >\n              {{ submitButtonLabel }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  '}]}],t.ctorParameters=function(){return[]},t.propDecorators={modalClass:[{type:e.Input}],closeOnEscape:[{type:e.Input}],closeOnOutsideClick:[{type:e.Input}],title:[{type:e.Input}],hideCloseButton:[{type:e.Input}],cancelButtonLabel:[{type:e.Input}],submitButtonLabel:[{type:e.Input}],onOpen:[{type:e.Output}],onClose:[{type:e.Output}],onSubmit:[{type:e.Output}],modalRoot:[{type:e.ViewChild,args:["modalRoot",{static:!0}]}]},t}(),i=function(){function t(t,n){this.router=t,this.activatedRoute=n,this.closeOnEscape=!0,this.closeOnOutsideClick=!0,this.hideCloseButton=!1,this.backdrop=!0,this.onOpen=new e.EventEmitter(!1),this.onClose=new e.EventEmitter(!1),this.onSubmit=new e.EventEmitter(!1),this.isOpened=!1,this.createBackDrop()}return t.prototype.ngOnInit=function(){this.open()},t.prototype.ngOnDestroy=function(){document.body.className=document.body.className.replace(/modal-open\b/,""),this.backdropElement&&this.backdropElement.parentNode===document.body&&document.body.removeChild(this.backdropElement)},t.prototype.open=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];this.isOpened||(this.isOpened=!0,this.onOpen.emit(e),document.body.appendChild(this.backdropElement),window.setTimeout(function(){return t.modalRoot.nativeElement.focus()},0),document.body.className+=" modal-open")},t.prototype.close=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(this.isOpened)if(this.isOpened=!1,this.onClose.emit(t),document.body.className=document.body.className.replace(/modal-open\b/,""),this.cancelUrl){var n={};this.cancelUrlExtras&&(this.cancelUrlExtras.relative&&(n.relativeTo=this.activatedRoute),n=Object.assign(n,this.cancelUrlExtras)),this.router.navigate(this.cancelUrl,n)}else window.history.back()},t.prototype.checkClose=function(t){!0===this.closeOnOutsideClick&&this.modalRoot.nativeElement===t.target&&this.close()},t.prototype.createBackDrop=function(){this.backdropElement=document.createElement("div"),this.backdropElement.classList.add("fade"),this.backdropElement.classList.add("in"),this.backdropElement.classList.add("show"),this.backdrop&&this.backdropElement.classList.add("modal-backdrop")},t.decorators=[{type:e.Component,args:[{selector:"route-modal",template:'\n<div class="modal route-modal"\n     tabindex="-1"\n     role="dialog"\n     #modalRoot\n     (keydown.esc)="closeOnEscape ? close() : 0"\n     [ngClass]="{ in: isOpened, fade: isOpened, show: isOpened}"\n     [ngStyle]="{ display: isOpened ? \'block\' : \'none\' }"\n     (click)="checkClose($event)">\n    <div [class]="\'modal-dialog \' + modalClass" #modalContent>\n        <div class="modal-content" tabindex="0" *ngIf="isOpened">\n            <div class="modal-header">\n                <h4 class="modal-title" *ngIf="title">{{ title }}</h4>\n                <ng-content select="modal-header"></ng-content>\n                <button\n                  *ngIf="!hideCloseButton"\n                  type="button"\n                  class="close"\n                  data-dismiss="modal"\n                  [attr.aria-label]="cancelButtonLabel || \'Close\'"\n                  (click)="close()"\n                >\n                  <span aria-hidden="true">&times;</span>\n                </button>\n            </div>\n            <div class="modal-body">\n                <ng-content select="modal-content"></ng-content>\n            </div>\n            <div class="modal-footer">\n                <ng-content select="modal-footer"></ng-content>\n                <button\n                  *ngIf="cancelButtonLabel"\n                  type="button"\n                  class="btn btn-default"\n                  data-dismiss="modal"\n                  (click)="close()"\n                  >\n                    {{ cancelButtonLabel }}\n                  </button>\n                <button\n                  *ngIf="submitButtonLabel"\n                  type="button"\n                  class="btn btn-primary"\n                  (click)="onSubmit.emit(undefined)"\n                >\n                    {{ submitButtonLabel }}\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n'}]}],t.ctorParameters=function(){return[{type:n.Router},{type:n.ActivatedRoute}]},t.propDecorators={cancelUrl:[{type:e.Input}],cancelUrlExtras:[{type:e.Input}],modalClass:[{type:e.Input}],closeOnEscape:[{type:e.Input}],closeOnOutsideClick:[{type:e.Input}],title:[{type:e.Input}],hideCloseButton:[{type:e.Input}],cancelButtonLabel:[{type:e.Input}],submitButtonLabel:[{type:e.Input}],backdrop:[{type:e.Input}],onOpen:[{type:e.Output}],onClose:[{type:e.Output}],onSubmit:[{type:e.Output}],modalRoot:[{type:e.ViewChild,args:["modalRoot",{static:!0}]}]},t}(),c=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[o.CommonModule],declarations:[d,i,a,s,l],exports:[d,i,a,s,l]}]}],t}();t.Modal=d,t.ModalComponent=d,t.ModalContent=s,t.ModalContentComponent=s,t.ModalFooter=l,t.ModalFooterComponent=l,t.ModalHeader=a,t.ModalHeaderComponent=a,t.ModalModule=c,t.RouteModal=i,t.RouteModalComponent=i,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-modal.umd.min.js.map