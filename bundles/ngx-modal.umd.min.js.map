{"version":3,"sources":["ng://ngx-modal/lib/modal.component.ts","ng://ngx-modal/lib/router-modal.component.ts","ng://ngx-modal/lib/modal.module.ts"],"names":["ModalHeaderComponent","Component","args","selector","template","ModalContentComponent","ModalFooterComponent","ModalComponent","cdr","this","closeOnEscape","closeOnOutsideClick","hideCloseButton","onOpen","EventEmitter","onClose","onSubmit","isOpened","createBackDrop","prototype","ngOnDestroy","document","body","className","replace","backdropElement","parentNode","removeChild","detectChanges","open","_this","_i","arguments","length","emit","appendChild","window","setTimeout","modalRoot","nativeElement","focus","close","checkClose","event","target","getElementById","createElement","setAttribute","classList","add","ChangeDetectorRef","Input","Output","ViewChild","static","RouteModalComponent","router","activatedRoute","backdrop","ngOnInit","cancelUrl","navigationExtras","cancelUrlExtras","relative","relativeTo","assign","navigate","history","back","Router","ActivatedRoute","ModalModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"gYAAA,IAAAA,EAAA,WAWA,SAAAA,KAMmC,2BANlCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAU,0CAIuBJ,EAjBnC,gBAmBA,SAAAK,KAMoC,2BANnCJ,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,gBACVC,SAAU,0CAIwBC,kBAEpC,SAAAC,KAMmC,2BANlCL,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAU,0CAIuBE,kBAqHjC,SAAAC,EAA6BC,GAAAC,KAAAD,IAAAA,EAjDtBC,KAAAC,eAAgB,EAGhBD,KAAAE,qBAAsB,EAMtBF,KAAAG,iBAAkB,EAalBH,KAAAI,OAAS,IAAIC,EAAAA,cAAa,GAG1BL,KAAAM,QAAU,IAAID,EAAAA,cAAa,GAG3BL,KAAAO,SAAW,IAAIF,EAAAA,cAAa,GAM5BL,KAAAQ,UAAW,EAgBhBR,KAAKS,iBAwET,OAjEEX,EAAAY,UAAAC,YAAA,WACEC,SAASC,KAAKC,UAAYF,SAASC,KAAKC,UAAUC,QAChD,eACA,IAGAf,KAAKgB,iBACLhB,KAAKgB,gBAAgBC,aAAeL,SAASC,MAE7CD,SAASC,KAAKK,YAAYlB,KAAKgB,iBAEjChB,KAAKD,IAAIoB,iBAOXrB,EAAAY,UAAAU,KAAA,eAAA,IAAAC,EAAArB,KAAKP,EAAA,GAAA6B,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA7B,EAAA6B,GAAAC,UAAAD,GACCtB,KAAKQ,WAETR,KAAKQ,UAAW,EAChBR,KAAKI,OAAOqB,KAAKhC,GACjBO,KAAKgB,iBAAmBJ,SAASC,KAAKa,YAAY1B,KAAKgB,iBACvDW,OAAOC,WAAU,WAAO,OAAAP,EAAKQ,UAAUC,cAAcC,SAAS,GAC9DnB,SAASC,KAAKC,WAAa,cAC3Bd,KAAKD,IAAIoB,kBAGXrB,EAAAY,UAAAsB,MAAA,eAAM,IAAAvC,EAAA,GAAA6B,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA7B,EAAA6B,GAAAC,UAAAD,GACCtB,KAAKQ,WAEVR,KAAKQ,UAAW,EAChBR,KAAKM,QAAQmB,KAAKhC,GAClBO,KAAKgB,iBAAmBJ,SAASC,KAAKK,YAAYlB,KAAKgB,iBACvDJ,SAASC,KAAKC,UAAYF,SAASC,KAAKC,UAAUC,QAChD,eACA,IAEFf,KAAKD,IAAIoB,kBAGXrB,EAAAY,UAAAuB,WAAA,SAAWC,IAEsB,IAA7BlC,KAAKE,qBACLF,KAAK6B,UAAUC,gBAAkBI,EAAMC,QAEvCnC,KAAKgC,SAQDlC,EAAAY,UAAAD,eAAR,WACOG,SAASwB,eAAe,oBAC3BpC,KAAKgB,gBAAkBJ,SAASyB,cAAc,OAC9CrC,KAAKgB,gBAAgBsB,aAAa,KAAM,kBACxCtC,KAAKgB,gBAAgBuB,UAAUC,IAAI,kBACnCxC,KAAKgB,gBAAgBuB,UAAUC,IAAI,QACnCxC,KAAKgB,gBAAgBuB,UAAUC,IAAI,MACnCxC,KAAKgB,gBAAgBuB,UAAUC,IAAI,8BAzLxChD,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,QACVC,SAAU,2zDA7BV8C,EAAAA,yDAyFCC,EAAAA,6BAGAA,EAAAA,mCAGAA,EAAAA,qBAGAA,EAAAA,+BAGAA,EAAAA,iCAGAA,EAAAA,iCAGAA,EAAAA,sBAOAC,EAAAA,wBAGAA,EAAAA,yBAGAA,EAAAA,0BAaAC,EAAAA,UAASnD,KAAA,CAAC,YAAa,CAAEoD,QAAQ,OAkFpC/C,KC/NAgD,EAAA,WA2HI,SAAAA,EAAoBC,EACAC,GADAhD,KAAA+C,OAAAA,EACA/C,KAAAgD,eAAAA,EAjDbhD,KAAAC,eAAgB,EAGhBD,KAAAE,qBAAsB,EAMtBF,KAAAG,iBAAkB,EASlBH,KAAAiD,UAAW,EAOXjD,KAAAI,OAAS,IAAIC,EAAAA,cAAa,GAG1BL,KAAAM,QAAU,IAAID,EAAAA,cAAa,GAG3BL,KAAAO,SAAW,IAAIF,EAAAA,cAAa,GAS5BL,KAAAQ,UAAW,EAUdR,KAAKS,iBAwEb,OAjEIqC,EAAApC,UAAAwC,SAAA,WACIlD,KAAKoB,QAGT0B,EAAApC,UAAAC,YAAA,WACIC,SAASC,KAAKC,UAAYF,SAASC,KAAKC,UAAUC,QAAQ,eAAgB,IACtEf,KAAKgB,iBAAmBhB,KAAKgB,gBAAgBC,aAAeL,SAASC,MACrED,SAASC,KAAKK,YAAYlB,KAAKgB,kBAQvC8B,EAAApC,UAAAU,KAAA,eAAA,IAAAC,EAAArB,KAAKP,EAAA,GAAA6B,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA7B,EAAA6B,GAAAC,UAAAD,GACGtB,KAAKQ,WAETR,KAAKQ,UAAW,EAChBR,KAAKI,OAAOqB,KAAKhC,GACjBmB,SAASC,KAAKa,YAAY1B,KAAKgB,iBAC/BW,OAAOC,WAAU,WAAO,OAAAP,EAAKQ,UAAUC,cAAcC,SAAS,GAC9DnB,SAASC,KAAKC,WAAa,gBAG/BgC,EAAApC,UAAAsB,MAAA,eAAM,IAAAvC,EAAA,GAAA6B,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA7B,EAAA6B,GAAAC,UAAAD,GACF,GAAKtB,KAAKQ,SAMV,GAJAR,KAAKQ,UAAW,EAChBR,KAAKM,QAAQmB,KAAKhC,GAClBmB,SAASC,KAAKC,UAAYF,SAASC,KAAKC,UAAUC,QAAQ,eAAgB,IAEtEf,KAAKmD,UAAW,KACZC,EAAqC,GACrCpD,KAAKqD,kBACDrD,KAAKqD,gBAAgBC,WACrBF,EAAiBG,WAAavD,KAAKgD,gBAEvCI,EAAmB,OAAgBI,OAAOJ,EAAkBpD,KAAKqD,kBAErErD,KAAK+C,OAAOU,SAASzD,KAAKmD,UAAWC,QAErCzB,OAAO+B,QAAQC,QAQhBb,EAAApC,UAAAuB,WAAP,SAAkBC,IACmB,IAA7BlC,KAAKE,qBAAgCF,KAAK6B,UAAUC,gBAAkBI,EAAMC,QAC5EnC,KAAKgC,SAILc,EAAApC,UAAAD,eAAR,WACIT,KAAKgB,gBAAkBJ,SAASyB,cAAc,OAC9CrC,KAAKgB,gBAAgBuB,UAAUC,IAAI,QACnCxC,KAAKgB,gBAAgBuB,UAAUC,IAAI,MACnCxC,KAAKgB,gBAAgBuB,UAAUC,IAAI,QAC/BxC,KAAKiD,UACLjD,KAAKgB,gBAAgBuB,UAAUC,IAAI,uCA9L9ChD,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,cACVC,SAAU,66DAJLiE,EAAAA,cAAQC,EAAAA,qDA+DZnB,EAAAA,+BAGAA,EAAAA,0BAGAA,EAAAA,6BAGAA,EAAAA,mCAGAA,EAAAA,qBAGAA,EAAAA,+BAGAA,EAAAA,iCAGAA,EAAAA,iCAGAA,EAAAA,wBAGAA,EAAAA,sBAOAC,EAAAA,wBAGAA,EAAAA,yBAGAA,EAAAA,0BAOAC,EAAAA,UAASnD,KAAA,CAAC,YAAa,CAAEoD,QAAQ,OAqFtCC,EArMA,GCAAgB,EAAA,WAKA,SAAAA,KAiB2B,2BAjB1BC,EAAAA,SAAQtE,KAAA,CAAC,CACNuE,QAAS,CAAEC,EAAAA,cACXC,aAAc,CACVpE,EACAgD,EACAvD,EACAK,EACAC,GAEJsE,QAAS,CACLrE,EACAgD,EACAvD,EACAK,EACAC,OAGmBiE,EAtB3B","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ViewChild,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\n\n@Component({\n  selector: 'modal-header',\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class ModalHeaderComponent {}\n\n@Component({\n  selector: 'modal-content',\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class ModalContentComponent {}\n\n@Component({\n  selector: 'modal-footer',\n  template: `\n    <ng-content></ng-content>\n  `\n})\nexport class ModalFooterComponent {}\n\n@Component({\n  selector: 'modal',\n  template: `\n    <div\n      class=\"modal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      #modalRoot\n      (keydown.esc)=\"closeOnEscape ? close() : 0\"\n      [ngClass]=\"{ in: isOpened, fade: isOpened, show: isOpened }\"\n      [ngStyle]=\"{ display: isOpened ? 'block' : 'none' }\"\n      (mousedown)=\"checkClose($event)\"\n    >\n      <div class=\"modal-dialog\" [ngClass]=\"modalClass\" #modalContent>\n        <div class=\"modal-content\" tabindex=\"0\" *ngIf=\"isOpened\">\n          <div class=\"modal-header\">\n            <h4 class=\"modal-title\" *ngIf=\"title\">{{ title }}</h4>\n            <ng-content select=\"modal-header\"></ng-content>\n            <button\n              *ngIf=\"!hideCloseButton\"\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              [attr.aria-label]=\"cancelButtonLabel || 'Close'\"\n              (click)=\"close()\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <ng-content select=\"modal-content\"></ng-content>\n          </div>\n          <div class=\"modal-footer\">\n            <ng-content select=\"modal-footer\"></ng-content>\n            <button\n              *ngIf=\"cancelButtonLabel\"\n              type=\"button\"\n              class=\"btn btn-default\"\n              data-dismiss=\"modal\"\n              (click)=\"close()\"\n            >\n              {{ cancelButtonLabel }}\n            </button>\n            <button\n              *ngIf=\"submitButtonLabel\"\n              type=\"button\"\n              class=\"btn btn-primary\"\n              (click)=\"onSubmit.emit(undefined)\"\n            >\n              {{ submitButtonLabel }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class ModalComponent implements OnDestroy {\n  // -------------------------------------------------------------------------\n  // Inputs\n  // -------------------------------------------------------------------------\n\n  @Input()\n  public modalClass: string;\n\n  @Input()\n  public closeOnEscape = true;\n\n  @Input()\n  public closeOnOutsideClick = true;\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public hideCloseButton = false;\n\n  @Input()\n  public cancelButtonLabel: string;\n\n  @Input()\n  public submitButtonLabel: string;\n\n  // -------------------------------------------------------------------------\n  // Outputs\n  // -------------------------------------------------------------------------\n\n  @Output()\n  public onOpen = new EventEmitter(false);\n\n  @Output()\n  public onClose = new EventEmitter(false);\n\n  @Output()\n  public onSubmit = new EventEmitter(false);\n\n  // -------------------------------------------------------------------------\n  // Public properties\n  // -------------------------------------------------------------------------\n\n  public isOpened = false;\n\n  // -------------------------------------------------------------------------\n  // Private properties\n  // -------------------------------------------------------------------------\n\n  @ViewChild('modalRoot', { static: true })\n  public modalRoot: ElementRef;\n\n  private backdropElement: HTMLElement;\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(private readonly cdr: ChangeDetectorRef) {\n    this.createBackDrop();\n  }\n\n  // -------------------------------------------------------------------------\n  // Lifecycle Methods\n  // -------------------------------------------------------------------------\n\n  ngOnDestroy() {\n    document.body.className = document.body.className.replace(\n      /modal-open\\b/,\n      ''\n    );\n    if (\n      this.backdropElement &&\n      this.backdropElement.parentNode === document.body\n    ) {\n      document.body.removeChild(this.backdropElement);\n    }\n    this.cdr.detectChanges();\n  }\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  open(...args: any[]) {\n    if (this.isOpened) return;\n\n    this.isOpened = true;\n    this.onOpen.emit(args);\n    this.backdropElement && document.body.appendChild(this.backdropElement);\n    window.setTimeout(() => this.modalRoot.nativeElement.focus(), 0);\n    document.body.className += ' modal-open';\n    this.cdr.detectChanges();\n  }\n\n  close(...args: any[]) {\n    if (!this.isOpened) return;\n\n    this.isOpened = false;\n    this.onClose.emit(args);\n    this.backdropElement && document.body.removeChild(this.backdropElement);\n    document.body.className = document.body.className.replace(\n      /modal-open\\b/,\n      ''\n    );\n    this.cdr.detectChanges();\n  }\n\n  checkClose(event: MouseEvent): void {\n    if (\n      this.closeOnOutsideClick === true &&\n      this.modalRoot.nativeElement === event.target\n    ) {\n      this.close();\n    }\n  }\n\n  // -------------------------------------------------------------------------\n  // Private Methods\n  // -------------------------------------------------------------------------\n\n  private createBackDrop() {\n    if (!document.getElementById('modal-backdrop')) {\n      this.backdropElement = document.createElement('div');\n      this.backdropElement.setAttribute('id', 'modal-backdrop');\n      this.backdropElement.classList.add('modal-backdrop');\n      this.backdropElement.classList.add('fade');\n      this.backdropElement.classList.add('in');\n      this.backdropElement.classList.add('show');\n    }\n  }\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, ViewChild, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationExtras } from '@angular/router';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'route-modal',\n    template: `\n<div class=\"modal route-modal\"\n     tabindex=\"-1\"\n     role=\"dialog\"\n     #modalRoot\n     (keydown.esc)=\"closeOnEscape ? close() : 0\"\n     [ngClass]=\"{ in: isOpened, fade: isOpened, show: isOpened}\"\n     [ngStyle]=\"{ display: isOpened ? 'block' : 'none' }\"\n     (click)=\"checkClose($event)\">\n    <div [class]=\"'modal-dialog ' + modalClass\" #modalContent>\n        <div class=\"modal-content\" tabindex=\"0\" *ngIf=\"isOpened\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\" *ngIf=\"title\">{{ title }}</h4>\n                <ng-content select=\"modal-header\"></ng-content>\n                <button\n                  *ngIf=\"!hideCloseButton\"\n                  type=\"button\"\n                  class=\"close\"\n                  data-dismiss=\"modal\"\n                  [attr.aria-label]=\"cancelButtonLabel || 'Close'\"\n                  (click)=\"close()\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <ng-content select=\"modal-content\"></ng-content>\n            </div>\n            <div class=\"modal-footer\">\n                <ng-content select=\"modal-footer\"></ng-content>\n                <button\n                  *ngIf=\"cancelButtonLabel\"\n                  type=\"button\"\n                  class=\"btn btn-default\"\n                  data-dismiss=\"modal\"\n                  (click)=\"close()\"\n                  >\n                    {{ cancelButtonLabel }}\n                  </button>\n                <button\n                  *ngIf=\"submitButtonLabel\"\n                  type=\"button\"\n                  class=\"btn btn-primary\"\n                  (click)=\"onSubmit.emit(undefined)\"\n                >\n                    {{ submitButtonLabel }}\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n`\n})\nexport class RouteModalComponent implements OnInit, OnDestroy {\n\n    // -------------------------------------------------------------------------\n    // Inputs\n    // -------------------------------------------------------------------------\n\n    @Input()\n    public cancelUrl: any[];\n\n    @Input()\n    public cancelUrlExtras: { relative: boolean } & NavigationExtras;\n\n    @Input()\n    public modalClass: string;\n\n    @Input()\n    public closeOnEscape = true;\n\n    @Input()\n    public closeOnOutsideClick = true;\n\n    @Input()\n    public title: string;\n\n    @Input()\n    public hideCloseButton = false;\n\n    @Input()\n    public cancelButtonLabel: string;\n\n    @Input()\n    public submitButtonLabel: string;\n\n    @Input()\n    public backdrop = true;\n\n    // -------------------------------------------------------------------------\n    // Outputs\n    // -------------------------------------------------------------------------\n\n    @Output()\n    public onOpen = new EventEmitter(false);\n\n    @Output()\n    public onClose = new EventEmitter(false);\n\n    @Output()\n    public onSubmit = new EventEmitter(false);\n\n    // -------------------------------------------------------------------------\n    // Private properties\n    // -------------------------------------------------------------------------\n\n    @ViewChild('modalRoot', { static: true })\n    public modalRoot: ElementRef;\n\n    public isOpened = false;\n\n    private backdropElement: HTMLElement;\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(private router: Router,\n                private activatedRoute: ActivatedRoute) {\n        this.createBackDrop();\n    }\n\n    // -------------------------------------------------------------------------\n    // Lifecycle Methods\n    // -------------------------------------------------------------------------\n\n    ngOnInit() {\n        this.open();\n    }\n\n    ngOnDestroy() {\n        document.body.className = document.body.className.replace(/modal-open\\b/, '');\n        if (this.backdropElement && this.backdropElement.parentNode === document.body) {\n            document.body.removeChild(this.backdropElement);\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    open(...args: any[]) {\n        if (this.isOpened) return;\n\n        this.isOpened = true;\n        this.onOpen.emit(args);\n        document.body.appendChild(this.backdropElement);\n        window.setTimeout(() => this.modalRoot.nativeElement.focus(), 0);\n        document.body.className += ' modal-open';\n    }\n\n    close(...args: any[]) {\n        if (!this.isOpened) return;\n\n        this.isOpened = false;\n        this.onClose.emit(args);\n        document.body.className = document.body.className.replace(/modal-open\\b/, '');\n\n        if (this.cancelUrl) {\n            let navigationExtras: NavigationExtras = { };\n            if (this.cancelUrlExtras) {\n                if (this.cancelUrlExtras.relative) {\n                    navigationExtras.relativeTo = this.activatedRoute;\n                }\n                navigationExtras = (Object as any).assign(navigationExtras, this.cancelUrlExtras);\n            }\n            this.router.navigate(this.cancelUrl, navigationExtras);\n        } else {\n            window.history.back();\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n\n    public checkClose(event: MouseEvent) {\n        if (this.closeOnOutsideClick === true && this.modalRoot.nativeElement === event.target) {\n            this.close();\n        }\n    }\n\n    private createBackDrop() {\n        this.backdropElement = document.createElement('div');\n        this.backdropElement.classList.add('fade');\n        this.backdropElement.classList.add('in');\n        this.backdropElement.classList.add('show');\n        if (this.backdrop) {\n            this.backdropElement.classList.add('modal-backdrop');\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalComponent, ModalHeaderComponent, ModalContentComponent, ModalFooterComponent } from './modal.component';\nimport { RouteModalComponent } from './router-modal.component';\n\n@NgModule({\n    imports: [ CommonModule ],\n    declarations: [\n        ModalComponent,\n        RouteModalComponent,\n        ModalHeaderComponent,\n        ModalContentComponent,\n        ModalFooterComponent,\n    ],\n    exports: [\n        ModalComponent,\n        RouteModalComponent,\n        ModalHeaderComponent,\n        ModalContentComponent,\n        ModalFooterComponent,\n    ],\n})\nexport class ModalModule { }\n"]}